{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/safe.pipe.ts","webpack:///./src/app/video-center/video-center.component.css","webpack:///./src/app/video-center/video-center.component.html","webpack:///./src/app/video-center/video-center.component.ts","webpack:///./src/app/video-detail/video-detail.component.css","webpack:///./src/app/video-detail/video-detail.component.html","webpack:///./src/app/video-detail/video-detail.component.ts","webpack:///./src/app/video-list/video-list.component.css","webpack:///./src/app/video-list/video-list.component.html","webpack:///./src/app/video-list/video-list.component.ts","webpack:///./src/app/video.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './home/home.component';\nimport { VideoCenterComponent } from './video-center/video-center.component';\n\nconst routes: Routes = [\n{path : '',redirectTo : '/home' , pathMatch :'full'},\n{path : 'home', component : HomeComponent},\n{path : 'videos', component : VideoCenterComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\"","module.exports = \"<nav class=\\\"navbar navbar-inverse\\\">\\n  <div class=\\\"container-fluid\\\">\\n    <div class=\\\"navbar-header\\\">\\n      <a href=\\\"#\\\" class=\\\"navbar-brand\\\">VideoPlayer</a>\\n    </div>\\n    <ul class=\\\"nav navbar-nav\\\">\\n      <li>\\n        <a routerLink=\\\"/home\\\" routerLinkActive=\\\"active\\\">Home</a>\\n      </li>\\n      <li>\\n        <a routerLink=\\\"/videos\\\" routerLinkActive=\\\"active\\\">Playlist</a>\\n      </li>\\n\\n    </ul>\\n\\n  </div>\\n</nav>\\n<div class=\\\"container\\\">\\n  <router-outlet></router-outlet>\\n</div>\\n\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {FormsModule} from \"@angular/forms\";\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './home/home.component';\nimport { VideoCenterComponent } from './video-center/video-center.component';\nimport { VideoListComponent } from './video-list/video-list.component';\nimport { VideoDetailComponent } from './video-detail/video-detail.component';\nimport { VideoService } from './video.service';\nimport { HttpClientModule } from '../../node_modules/@angular/common/http';\nimport { SafePipe } from './safe.pipe';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    VideoCenterComponent,\n    VideoListComponent,\n    VideoDetailComponent,\n    SafePipe\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule\n  ],\n  providers: [\n    // VideoService\n  ],\n  bootstrap: [AppComponent],\n  \n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"<div class=\\\"jumbotron\\\">\\n  <h1>Video Player</h1>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport {DomSanitizer} from '@angular/platform-browser';\n@Pipe({\n  name: 'safe'\n})\nexport class SafePipe implements PipeTransform {\n\n  constructor(private sanitizer : DomSanitizer){}\n\n  transform(url: any) {\n    return this.sanitizer.bypassSecurityTrustResourceUrl(url);\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"row\\\">\\n<div class=\\\"col-sm-9\\\">\\n    <div>\\n        <h2>New Video</h2>\\n        <form #form = \\\"ngForm\\\" (ngSubmit) =\\\"onSubmitAddVideo(form.value)\\\"  class=\\\"well\\\">\\n            <div class=\\\"form-group\\\">\\n                <label>Title</label>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" required name=\\\"title\\\" ngModel>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n                    <label>Url</label>\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" required name=\\\"url\\\" ngModel>\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                        <label>Description</label>\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" required name=\\\"description\\\" ngModel>\\n                    </div>\\n                    <button type=\\\"submit\\\" class=\\\"btn btn-success\\\">Save</button>\\n\\n        </form>\\n    </div>\\n<video-detail *ngIf =\\\"selectedVideo\\\" [video]=\\\"selectedVideo\\\"></video-detail>\\n</div>\\n\\n<div class=\\\"col-sm-3\\\">\\n    <button style = \\\"margin-bottom : 2px;\\\" type = \\\"button\\\" class=\\\"btn btn-success btn-block\\\">New Video</button>\\n    <video-list (SelectVideo) = \\\"onSelectVideo($event)\\\" [videos] =\\\"videos\\\"></video-list>\\n    </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {Video} from './../video';\nimport { VideoService } from './../video.service';\n\n@Component({\n  selector: 'app-video-center',\n  templateUrl: './video-center.component.html',\n  styleUrls: ['./video-center.component.css']\n  \n\n  \n})\nexport class VideoCenterComponent implements OnInit {\n\n  // videos : Video[] = [\n  //   {\"_id\" : \"1\" , \"title\" : \"title 1\" , \"url\" : \"url 1\",\"description\":\"description 1\"},\n  //   {\"_id\" : \"2\" , \"title\" : \"title 2\" , \"url\" : \"url 2\",\"description\":\"description 2\"},\n  //   {\"_id\" : \"3\" , \"title\" : \"title 3\" , \"url\" : \"url 3\",\"description\":\"description 3\"},\n  //   {\"_id\" : \"4\" , \"title\" : \"title 4\" , \"url\" : \"url 4\",\"description\":\"description 4\"}\n  // ];\n  videos : Array <Video>;\n  selectedVideo : Video;\n \n  constructor(private videoService : VideoService) { }\n\n  ngOnInit() {\n this.videoService.getVideos()\n .subscribe(resVideoData => this.videos = resVideoData);\n console.log(this.videos)\n  }\n onSelectVideo(video:any){\nthis.selectedVideo = video;\nconsole.log(this.selectedVideo);\n }\n\n onSubmitAddVideo(video:Video){\nthis.videoService.addVideo(video)\n.subscribe(resNewVideo=>{\nthis.videos.push(resNewVideo);\nthis.selectedVideo = resNewVideo\n});\n }\n}\n","module.exports = \"\"","module.exports = \"<div>\\n  <div>\\n      <iframe [src]=\\\"video.url | safe\\\" width=\\\"100%\\\" height=\\\"360\\\" frameborder=\\\"1\\\" allow=\\\"autoplay; encrypted-media\\\" allowfullscreen></iframe>\\n    \\n  </div>\\n  <form>\\n    <div *ngIf = \\\"editTitle\\\" class=\\\"form-group\\\">\\n      <input type = \\\"input\\\" class=\\\"form-control\\\" name = \\\"title\\\" required placeholder = \\\"title\\\"\\n      [(ngModel)]= \\\"video.title\\\">\\n    </div>\\n<h3 *ngIf = \\\"!editTitle\\\" (click) = \\\"onTitleClick()\\\">{{video.title}}</h3>\\n    <div class=\\\"form-group\\\">\\n        <input type = \\\"input\\\" class=\\\"form-control\\\" name = \\\"url\\\" required placeholder = \\\"url\\\"\\n        [(ngModel)] = \\\"video.url\\\">\\n      </div>\\n\\n      <div class=\\\"form-group\\\">\\n          <textarea class=\\\"form-control\\\" rows=\\\"5\\\" name=\\\"desc\\\"  [(ngModel)] = \\\"video.description\\\"></textarea>\\n         \\n        </div>\\n  </form>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'video-detail',\n  templateUrl: './video-detail.component.html',\n  styleUrls: ['./video-detail.component.css'],\n  inputs  :['video']\n})\nexport class VideoDetailComponent implements OnInit {\n\n private editTitle : boolean = false;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  ngOnChanges(){\n    this.editTitle = false;\n  }\n\n  onTitleClick(){\n    this.editTitle = true;\n    \n  }\n\n}\n","module.exports = \"\"","module.exports = \"<ul class=\\\"nav nav-pills nav-stacked\\\">\\n<li (click) = \\\"onSelect(video)\\\" *ngFor = \\\"let video of videos \\\">\\n  <a>{{video.title}}</a>\\n </li>\\n</ul>\"","import { Component, OnInit , EventEmitter } from '@angular/core';\nimport {Video} from './../video';\n@Component({\n  selector: 'video-list',\n  templateUrl: './video-list.component.html',\n  styleUrls: ['./video-list.component.css'],\n  inputs : ['videos'],\n  outputs : ['SelectVideo']\n})\nexport class VideoListComponent implements OnInit {\n\n  public SelectVideo = new EventEmitter();\n\n  constructor() { }\n\n  ngOnInit() {\n    \n  }\n  onSelect(vid:Video){\n    this.SelectVideo.emit(vid);\n  }\n\n}\n","import { Injectable } from '@angular/core';\n//import {Http , Response} from '@angular/http';\nimport { HttpClient } from '@angular/common/http';\nimport 'rxjs/add/operator/map';\nimport { Video } from './video';\n\n// HttpClient\n// this.http.get('https://api.github.com/users')\n//   .subscribe(data => console.log(data));\n\n// Http\n// this.users = this.http.get('https://api.github.com/users')\n//   .map(response => response.json())\n//   .subscribe(data => console.log(data));\n\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class VideoService {\n\n  private videoEndpoint = 'http://localhost:3000/api/videos';\n\n   constructor(private _http : HttpClient) { }\n\n   getVideos() {\n    return this._http.get< any>(this.videoEndpoint);\n  }\n\naddVideo(video : Video){\nreturn this._http.post<any>(this.videoEndpoint,{\ntitle : video.title,\nurl : video.url,\ndescription  :video.description\n}\n)\n}\n\n\n\n  \n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}